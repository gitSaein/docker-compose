version: '3'
services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_CREATE_TOPICS: "test:3:1,test2:3:1" # Topic명:Partition개수:Replica개수
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  # 서비스 명
  kafka-ui:
    # 사용할 이미지
    image: provectuslabs/kafka-ui
    # 컨테이너명 설정
    container_name: kafka-ui
    # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)  
    ports:
      - "9099:9099"
    # 환경 변수 설정
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=localhost:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181
      - SERVER_PORT=9099
  # schemaregistry:
  #   image: confluentinc/cp-schema-registry
  #   container_name: schemaregistry
  #   hostname: schemaregistry
  #   ports: 
  #     - 8081:8081
  #   environment:
  #     SCHEMA_REGISTRY_HOST_NAME: schemaregistry
  #     SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
  
  # kafkaconnect:
  #   image: confluentinc/cp-kafka-connect
  #   container_name: kafkaconnect
  #   hostname: kafkaconnect
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #     - schemaregistry
  #   ports:
  #     - 8083:8083
  #   volumes:
  #     - ./target/kafka-connect-mongodb/:/etc/kafka-connect/jars/kafka-connect-mongodb/
  #   environment: 
  #     CONNECT_BOOTSTRAP_SERVERS: kafka:9092
  #     CONNECT_REST_ADVERTISED_HOST_NAME: kafkaconnect
  #     CONNECT_REST_PORT: 8083
  #     CONNECT_GROUP_ID: compose-connect-group
  #     CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
  #     CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
  #     CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
  #     CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
  #     CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
  #     CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry:8081
  #     CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
  #     CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry:8081
  #     CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
  #     CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
  #     CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #     CONNECT_PLUGIN_PATH: '/usr/share/java,/etc/kafka-connect/jars'